// source: data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.Article', null, global);
goog.exportSymbol('proto.proto.BlogHomeInfo', null, global);
goog.exportSymbol('proto.proto.Tag', null, global);
goog.exportSymbol('proto.proto.UserInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Article = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Article.repeatedFields_, null);
};
goog.inherits(proto.proto.Article, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Article.displayName = 'proto.proto.Article';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Tag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Tag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Tag.displayName = 'proto.proto.Tag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.BlogHomeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.BlogHomeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.BlogHomeInfo.displayName = 'proto.proto.BlogHomeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserInfo.displayName = 'proto.proto.UserInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Article.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Article.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Article.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Article} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Article.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    articlecover: jspb.Message.getFieldWithDefault(msg, 4, ""),
    articletitle: jspb.Message.getFieldWithDefault(msg, 5, ""),
    articlecontent: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createtime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    istop: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    ispublish: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isdelete: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isoriginal: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    clickcount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    collectcount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.proto.Tag.toObject, includeInstance),
    categoryname: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Article}
 */
proto.proto.Article.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Article;
  return proto.proto.Article.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Article} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Article}
 */
proto.proto.Article.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticlecover(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticletitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticlecontent(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstop(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspublish(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdelete(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsoriginal(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClickcount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCollectcount(value);
      break;
    case 15:
      var value = new proto.proto.Tag;
      reader.readMessage(value,proto.proto.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Article.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Article.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Article} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Article.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCategoryid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getArticlecover();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArticletitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getArticlecontent();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getIstop();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIspublish();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsdelete();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsoriginal();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getClickcount();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getCollectcount();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.proto.Tag.serializeBinaryToWriter
    );
  }
  f = message.getCategoryname();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.Article.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 userId = 2;
 * @return {number}
 */
proto.proto.Article.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 categoryID = 3;
 * @return {number}
 */
proto.proto.Article.prototype.getCategoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string articleCover = 4;
 * @return {string}
 */
proto.proto.Article.prototype.getArticlecover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setArticlecover = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string articleTitle = 5;
 * @return {string}
 */
proto.proto.Article.prototype.getArticletitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setArticletitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string articleContent = 6;
 * @return {string}
 */
proto.proto.Article.prototype.getArticlecontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setArticlecontent = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 createTime = 7;
 * @return {number}
 */
proto.proto.Article.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 updateTime = 8;
 * @return {number}
 */
proto.proto.Article.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool isTop = 9;
 * @return {boolean}
 */
proto.proto.Article.prototype.getIstop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setIstop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool isPublish = 10;
 * @return {boolean}
 */
proto.proto.Article.prototype.getIspublish = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setIspublish = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isDelete = 11;
 * @return {boolean}
 */
proto.proto.Article.prototype.getIsdelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setIsdelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isOriginal = 12;
 * @return {boolean}
 */
proto.proto.Article.prototype.getIsoriginal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setIsoriginal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int64 clickCount = 13;
 * @return {number}
 */
proto.proto.Article.prototype.getClickcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setClickcount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 collectCount = 14;
 * @return {number}
 */
proto.proto.Article.prototype.getCollectcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setCollectcount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * repeated Tag tags = 15;
 * @return {!Array<!proto.proto.Tag>}
 */
proto.proto.Article.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.proto.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Tag, 15));
};


/**
 * @param {!Array<!proto.proto.Tag>} value
 * @return {!proto.proto.Article} returns this
*/
proto.proto.Article.prototype.setTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.proto.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Tag}
 */
proto.proto.Article.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.proto.Tag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string categoryName = 16;
 * @return {string}
 */
proto.proto.Article.prototype.getCategoryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Article} returns this
 */
proto.proto.Article.prototype.setCategoryname = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Tag.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Tag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Tag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Tag.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tagname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    clickcount: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Tag}
 */
proto.proto.Tag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Tag;
  return proto.proto.Tag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Tag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Tag}
 */
proto.proto.Tag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClickcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Tag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Tag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Tag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Tag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTagname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getClickcount();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.Tag.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Tag} returns this
 */
proto.proto.Tag.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tagName = 2;
 * @return {string}
 */
proto.proto.Tag.prototype.getTagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Tag} returns this
 */
proto.proto.Tag.prototype.setTagname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 createTime = 3;
 * @return {number}
 */
proto.proto.Tag.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Tag} returns this
 */
proto.proto.Tag.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 updateTime = 4;
 * @return {number}
 */
proto.proto.Tag.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Tag} returns this
 */
proto.proto.Tag.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool status = 5;
 * @return {boolean}
 */
proto.proto.Tag.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Tag} returns this
 */
proto.proto.Tag.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 clickCount = 6;
 * @return {number}
 */
proto.proto.Tag.prototype.getClickcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Tag} returns this
 */
proto.proto.Tag.prototype.setClickcount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.BlogHomeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.BlogHomeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.BlogHomeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.BlogHomeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    userinfo: (f = msg.getUserinfo()) && proto.proto.UserInfo.toObject(includeInstance, f),
    articlecount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categorycount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tagcount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    notice: jspb.Message.getFieldWithDefault(msg, 5, ""),
    viewcount: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.BlogHomeInfo}
 */
proto.proto.BlogHomeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.BlogHomeInfo;
  return proto.proto.BlogHomeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.BlogHomeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.BlogHomeInfo}
 */
proto.proto.BlogHomeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.UserInfo;
      reader.readMessage(value,proto.proto.UserInfo.deserializeBinaryFromReader);
      msg.setUserinfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArticlecount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCategorycount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTagcount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setViewcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.BlogHomeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.BlogHomeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.BlogHomeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.BlogHomeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getArticlecount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCategorycount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTagcount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNotice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getViewcount();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional UserInfo userInfo = 1;
 * @return {?proto.proto.UserInfo}
 */
proto.proto.BlogHomeInfo.prototype.getUserinfo = function() {
  return /** @type{?proto.proto.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.proto.UserInfo, 1));
};


/**
 * @param {?proto.proto.UserInfo|undefined} value
 * @return {!proto.proto.BlogHomeInfo} returns this
*/
proto.proto.BlogHomeInfo.prototype.setUserinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.BlogHomeInfo} returns this
 */
proto.proto.BlogHomeInfo.prototype.clearUserinfo = function() {
  return this.setUserinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.BlogHomeInfo.prototype.hasUserinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 articleCount = 2;
 * @return {number}
 */
proto.proto.BlogHomeInfo.prototype.getArticlecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.BlogHomeInfo} returns this
 */
proto.proto.BlogHomeInfo.prototype.setArticlecount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 categoryCount = 3;
 * @return {number}
 */
proto.proto.BlogHomeInfo.prototype.getCategorycount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.BlogHomeInfo} returns this
 */
proto.proto.BlogHomeInfo.prototype.setCategorycount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 tagCount = 4;
 * @return {number}
 */
proto.proto.BlogHomeInfo.prototype.getTagcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.BlogHomeInfo} returns this
 */
proto.proto.BlogHomeInfo.prototype.setTagcount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string notice = 5;
 * @return {string}
 */
proto.proto.BlogHomeInfo.prototype.getNotice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.BlogHomeInfo} returns this
 */
proto.proto.BlogHomeInfo.prototype.setNotice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 viewCount = 6;
 * @return {number}
 */
proto.proto.BlogHomeInfo.prototype.getViewcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.BlogHomeInfo} returns this
 */
proto.proto.BlogHomeInfo.prototype.setViewcount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nickname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 4, ""),
    intro: jspb.Message.getFieldWithDefault(msg, 5, ""),
    website: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createtime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isdisable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserInfo}
 */
proto.proto.UserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserInfo;
  return proto.proto.UserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserInfo}
 */
proto.proto.UserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntro(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdisable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIntro();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getIsdisable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.UserInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.proto.UserInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nickName = 3;
 * @return {string}
 */
proto.proto.UserInfo.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setNickname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string avatar = 4;
 * @return {string}
 */
proto.proto.UserInfo.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string intro = 5;
 * @return {string}
 */
proto.proto.UserInfo.prototype.getIntro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setIntro = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string website = 6;
 * @return {string}
 */
proto.proto.UserInfo.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 createTime = 7;
 * @return {number}
 */
proto.proto.UserInfo.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 updateTime = 8;
 * @return {number}
 */
proto.proto.UserInfo.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool isDisable = 9;
 * @return {boolean}
 */
proto.proto.UserInfo.prototype.getIsdisable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.UserInfo} returns this
 */
proto.proto.UserInfo.prototype.setIsdisable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


goog.object.extend(exports, proto.proto);
